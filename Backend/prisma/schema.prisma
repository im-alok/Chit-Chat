generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(cuid())
  email      String       @unique
  firstName  String
  lastName   String
  password   String?
  profilePic String?
  createdAt  DateTime?    @default(now())
  updatedAt  DateTime     @updatedAt
  message    Message[]
  chat       ChatMember[]
  groupAdmin Chat[]
}

model Chat {
  id           String  @id @default(cuid())
  chatName     String?
  isGroupChat  Boolean @default(false)
  groupAdminId String?
  latestMessage String?      @unique
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  message       Message[] 
  members       ChatMember[]
  GroupAdmin    User?        @relation(fields: [groupAdminId], references: [id])
  LatestMessage Message?     @relation("LatestMessage", fields: [latestMessage], references: [id])
}

model ChatMember {
  memberId String
  chatId String
  User   User   @relation(fields: [memberId], references: [id],onDelete: Cascade)
  Chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@id([memberId, chatId])
}

model Message {
  id                   String   @id @default(cuid()) //chatId
  senderId               String //sender of message
  chatId               String //message is belong to which sender
  message              String
  createdAt            DateTime @default(now())
  User                 User     @relation(fields: [senderId], references: [id], onDelete: Cascade)
  Chat                 Chat     @relation(fields: [chatId], references: [id],onDelete: Cascade)
  latestMessageForChat Chat?    @relation("LatestMessage")
}
